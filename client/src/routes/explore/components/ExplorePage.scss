@import "~scss/variables";

.explorePage {
	padding-left: 15px;
	padding-right: 15px;
}

#explorePage {
	.popover-cover {
		position: fixed;
		z-index: 1;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}

	.sortable-ghost {
		opacity: 0;
	}
	#content {
		padding-top: 50px;
		min-height: 100%;
	}

	.icon.spin,
	.icon.spinReverse {
		animation-duration: 5s;
	}
	.icon.text {
		line-height: 1em;
		font-weight: bold;
	}

	ul#description {
		padding: 0.5em 0.5em;
		margin-top: 1rem;
		list-style: none;
		line-height: 1.2em;
		font-size: 1rem;

		li {
			padding: 0.3em 0.5em;
		}

		li:focus {
			outline-color: currentColor;
		}

		input#newLine {
			background: transparent;
			border-top: 0;
			border-right: 0;
			border-left: 0;
			color: inherit;
			border-color: currentColor;

			&:focus {
				box-shadow: 0 0 0 1px;
			}
		}

		&.empty {
			opacity: 0.5;

			&:hover,
			&:focus-within {
				opacity: 1;
			}
		}
	}

	.description.alert-default {
		text-align: left;
		font-size: 1.3em;
		margin-top: -25px;
		margin-bottom: 30px;
		padding: 0;
	}

	i.gi {
		font-size: inherit;
	}

	.delay500 {
		transition-delay: 500ms;
	}

	@keyframes example {
		from {
			opacity: 0;
			transform: translateY(15px);
		}
		to {
			opacity: 1;
			transform: translateY(0px);
		}
	}

	.example-enter {
		transition-delay: 1s;
		visibility: hidden;
		opacity: 0;
		height: 0px;
		width: 0px;
	}
	.example-enter.example-enter-active {
		opacity: 1;
		visibility: visible;
		height: auto;
		width: auto;
		transition: opacity 500ms ease-in;
		transition-delay: 1s;
	}

	.example-exit {
		opacity: 1;
	}

	.example-exit.example-exit-active {
		opacity: 0;
		transition: opacity 500ms ease-in;
	}

	.switch-enter {
		opacity: 0.01;
	}
	.switch-enter.switch-enter-active {
		opacity: 1;
		transition: opacity 0.5s ease-in;
	}
	.switch-exit {
		/* Completely hide the button while it's being animated and before it's removed from the DOM. */
		visibility: hidden;
		height: 0px;
		width: 0px;
		position: absolute;

		/* Starting opacity */
		opacity: 1;
	}
	.switch-exit.switch-exit-active {
		/* Ending opacity:
			Trigger opacity change so the "transitionend" event will fire, causing React to remove from the DOM. */
		opacity: 0;
		transition: opacity 0.5s ease-in;
	}

	/* Transition */
	.slide-up-appear,
	.slide-up-enter {
		opacity: 0;
		transform: translateY(15px);
		transition: all 500ms ease;
	}

	.slide-up-appear.slide-up-appear-active,
	.slide-up-enter.slide-up-enter-active {
		opacity: 1;
		transform: translateY(0px);
	}

	.slide-up-exit.slide-up-exit-active {
		display: none;
		transition-delay: 0 !important;
	}

	.fa[class^="flaticon-"]:before,
	.fa[class*=" flaticon-"]:before,
	.fa[class^="flaticon-"]:after,
	.fa[class*=" flaticon-"]:after {
		font-size: 1em;
		margin: 0;
	}

	.fake-disabled {
		textarea,
		input,
		select {
			background-color: #eee;
		}
	}

	.isaSelect {
		color: #000;
		text-align: left;
		font-size: 0.85rem;

		.text-option div {
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
		}
	}
}

#patternSelectModal {
	.sample {
		height: 5rem;
		margin-bottom: $grid-gutter-width;
		padding: 0.5em;
		border: 1px solid currentColor;
		cursor: pointer;

		&:hover {
			border-radius: 1em;
		}
	}
}

.link {
	color: inherit;
}

.link[class*="bg-"] {
	color: var(--contrast);
}
