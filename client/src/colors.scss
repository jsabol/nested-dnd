@import "./variables.scss";

// defaults if not set
*{
	--parent-theme: #eee;
}



$html5colorNames: "aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","ocean";
$html5colors: #F0F8FF,#FAEBD7,#00FFFF,#7FFFD4,#F0FFFF,#F5F5DC,#FFE4C4,#000000,#FFEBCD,#0000FF,#8A2BE2,#A52A2A,#DEB887,#5F9EA0,#7FFF00,#D2691E,#FF7F50,#6495ED,#FFF8DC,#DC143C,#00FFFF,#00008B,#008B8B,#A9A9A9,#006400,#BDB76B,#8B008B,#556B2F,#FF8C00,#9932CC,#8B0000,#E9967A,#8FBC8F,#483D8B,#2F4F4F,#00CED1,#9400D3,#FF1493,#00BFFF,#696969,#1E90FF,#B22222,#FFFAF0,#228B22,#FF00FF,#DCDCDC,#F8F8FF,#FFD700,#DAA520,#808080,#008000,#ADFF2F,#CD5C5C,#4B0082,#FFFFF0,#F0E68C,#E6E6FA,#FFF0F5,#7CFC00,#FFFACD,#ADD8E6,#F08080,#E0FFFF,#FAFAD2,#D3D3D3,#90EE90,#FFB6C1,#FFA07A,#20B2AA,#87CEFA,#778899,#B0C4DE,#FFFFE0,#00FF00,#32CD32,#FAF0E6,#FF00FF,#800000,#66CDAA,#0000CD,#BA55D3,#9370D8,#3CB371,#7B68EE,#00FA9A,#48D1CC,#C71585,#191970,#F5FFFA,#FFE4E1,#FFE4B5,#FFDEAD,#000080,#FDF5E6,#808000,#6B8E23,#FFA500,#FF4500,#DA70D6,#EEE8AA,#98FB98,#AFEEEE,#D87093,#FFEFD5,#FFDAB9,#CD853F,#FFC0CB,#DDA0DD,#B0E0E6,#800080,#FF0000,#BC8F8F,#4169E1,#8B4513,#FA8072,#F4A460,#2E8B57,#FFF5EE,#A0522D,#C0C0C0,#87CEEB,#6A5ACD,#708090,#FFFAFA,#00FF7F,#4682B4,#D2B48C,#008080,#D8BFD8,#FF6347,#40E0D0,#EE82EE,#F5DEB3,#FFFFFF,#F5F5F5,#FFFF00,#9ACD32,#0057BE;

$gradients: (
	ocean: linear-gradient(#00BEA6,#0057BE)
);

@function isLight($color){
	@return lightness($color) > 49;
}

@function getContrastText($color){
	$color-adjust: 0%;

	@if (isLight($color)){
		$lightness: lightness($color);
		$color-adjust: -25%;

		@if ($lightness > 60) {
			$color-adjust: -45%;
		}
		@if ($lightness > 90) {
			$color-adjust: -55%;
		}
	}
	@else {
		$color-adjust: 55%;
	}

	@return  adjust-color($color, $lightness: $color-adjust);
}

@function slightlyOff($color){
	@if (isLight($color)){
		@return adjust-color($color, $lightness: -10%);
	}
	@else {
		@return adjust-color($color, $lightness: 15%);
	}
}

@function moreOff($color){
	@if (isLight($color)){
		@return adjust-color($color, $lightness: -15%);
	}
	@else {
		@return adjust-color($color, $lightness: 20%);
	}
}


@mixin lightBG($color, $background: null) {

	$lightness: lightness($color);

	background-color: $color;

	$color-adjust: -25%;
	@if ($lightness > 60) {
		$color-adjust: -45%;
	}
	@if ($lightness > 90) {
		$color-adjust: -55%;
	}

	$contrast: adjust-color($color, $lightness: $color-adjust);
	$btnBG: adjust-color($color, $lightness: -10%);
	$btnBorder: adjust-color($color, $lightness: -15%);

	color: $contrast;

	&.child-inner{
		background: $color $background;
		color: $contrast;
	}

	.child-inner.link{
		box-shadow: 0px 0px 5px $btnBG;
	}

	&.child-inner.link{
		&:hover,&:focus,&:active,&:active:focus{
			opacity: 1;
			color: adjust-color($color, $lightness: ( $color-adjust - 10% ) );
			background-color: adjust-color($color, $lightness: -5% );
		}
	}

	
	@include ancestors($btnBG, $contrast, $btnBorder, $background);
}


@mixin darkBG($color, $background: null) {

	$contrast: adjust-color($color, $lightness: 55%);
	$slightly: adjust-color($color, $lightness: 5% );
	$btnBG: adjust-color($color, $lightness: 15%);
	$btnBorder: adjust-color($color, $lightness: 13%);

	background: $color $background;
	color: $contrast;
	--box-shadow-color: $btnBG;

	.btn{
		@include button-variant($btnBG, $btnBorder);
	}

	> .btn{
		@include button-variant($btnBG, $btnBorder);
	}

	&.btn {
		@include button-variant($color, $btnBorder);
	}

	&.child-inner.link{
		&:hover,&:focus,&:active,&:active:focus{
			color: adjust-color($color, $lightness: 65% );
			background: $slightly $background;
		}
	}

	
	
	@include ancestors($btnBG, $contrast, $btnBorder, $background);
}


@mixin ancestors($bgColor, $text, $slightly, $bg: null){
	&.parent .dropdown.open{
		.dropdown-menu {
			background-color: $slightly;

			> li > a{
				&:hover{ 
					background: $bgColor $bg; 
				}
			}
		}
	}
}


/* Apply these in a certain order so they take precendence */

// Within the color
@for $i from 1 through length($html5colors) {
	$color: nth($html5colors, $i);
	$name: nth($html5colorNames, $i);
	$slightlyOff: slightlyOff($color);
	$contrast: getContrastText($color);

	.#{$name}{
		.btn{
			@include button-variant($slightlyOff, $slightlyOff);
		}
		* {
			--parent-theme: moreOff($color);
		}
	}
}

// Immediate child of the color
@for $i from 1 through length($html5colors) {
	$color: nth($html5colors, $i);
	$name: nth($html5colorNames, $i);
	$slightlyOff: slightlyOff($color);
	$contrast: getContrastText($color);

	.#{$name} {
		> .btn{
			@include button-variant($slightlyOff, $slightlyOff);
		}
	}
}

// Is the color
@for $i from 1 through length($html5colors) {
	$color: nth($html5colors, $i);
	$name: nth($html5colorNames, $i);
	$slightlyOff: slightlyOff($color);
	$contrast: getContrastText($color);
	$gradient: map-get($gradients, $name);
	$background: $color;

	@if ($gradient){
		$background: $color $gradient;
	}


	.#{$name}{
		--slightlyOff: $slightlyOff;
		--contrast: $contrast;
		--theme: $color;
		
		background: $background;
		color: $contrast;

		&.btn {
			@include button-variant($color, $color);
			background: $background;
		}
		&.fa, &.gi{
			color: $color;
		}
	}
}


.rainbow, .child-inner.rainbow{
	color:black;

	$rainbow: linear-gradient(to right bottom, magenta, orange, yellow, SpringGreen, cyan);

	background: red; /* For browsers that do not support gradients */
	background: -webkit-linear-gradient(top left, magenta, orange, yellow, SpringGreen, cyan); /* For Safari 5.1 to 6.0 */
	background: -moz-linear-gradient(right bottom, magenta, orange, yellow, SpringGreen, cyan); /* For Firefox 3.6 to 15 */
	background: $rainbow; /* Standard syntax (must be last) */

	&.fa, &.gi{
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
	}

	$btnBG: #00ff7f;
	@include ancestors($btnBG, white, lighten($btnBG, 5%), $rainbow);
}

.glow{
	-webkit-box-shadow: 0px 0px 15px 2px rgba(255,255,255,0.86);
	-moz-box-shadow: 0px 0px 15px 2px rgba(255,255,255,0.86);
	box-shadow: 0px 0px 15px 2px rgba(255,255,255,0.86);
	@include lightBG(#FFFACD);

	&.fa, &.gi{
		box-shadow:none;
		color: #FFFACD;
		text-shadow: 0px 0px 15px 2px rgba(255,255,255,0.86);
	}
}

.ocean {

	&.fa, &.gi{
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
	}

	//@include ancestors($btnBG, white, adjust-color(SpringGreen, lighten: 5%))
}